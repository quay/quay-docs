{
  "openapi": "3.0.3",
  "info": {
    "title": "Red Hat Quay API",
    "version": "1.0.0",
    "description": "This API allows you to perform many of the operations required to work with Quay repositories, users, and organizations."
  },
  "servers": [
    {
      "url": "{protocol}://{host}",
      "description": "Set your own Red Hat Quay registry URL",
      "variables": {
        "protocol": {
          "default": "https",
          "enum": [
            "http",
            "https"
          ]
        },
        "host": {
          "default": "quay-server.example.com",
          "description": "Enter your Red Hat Quay registry hostname."
        }
      }
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Application specific tokens",
      "description": "Manage application-specific tokens by using the API"
    },
    {
      "name": "Builds",
      "description": "API endpoints for managing Quay repository builds"
    },
    {
      "name": "Discovery",
      "description": "API discovery information"
    },
    {
      "name": "Error",
      "description": "Obtain error details by using the API"
    },
    {
      "name": "Global messages",
      "description": "Messages API"
    },
    {
      "name": "Logs",
      "description": "Access usage logs for organizations or repositories."
    }
  ],
  "paths": {
    "/api/v1/user/apptoken": {
      "get": {
        "tags": [
          "Application specific tokens"
        ],
        "summary": "List app-specific tokens",
        "description": "Retrieves a list of application-specific tokens for the user.",
        "operationId": "listAppTokens",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "expiring",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "If true, only returns those tokens expiring soon"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful invocation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Session required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Application specific tokens"
        ],
        "summary": "Create a new app-specific token",
        "description": "Creates a new application-specific token for the user.",
        "operationId": "createAppToken",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "MyAppToken"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful creation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "abc123xyz"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Session required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/apptoken/{token_uuid}": {
      "get": {
        "tags": [
          "Application specific tokens"
        ],
        "summary": "Get details of a specific app token",
        "description": "Retrieves details for a specific application token.",
        "operationId": "getAppToken",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "token_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful invocation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Session required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Application specific tokens"
        ],
        "summary": "Revoke a specific app token",
        "description": "Revokes a specific application token for the user.",
        "operationId": "revokeAppToken",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "token_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Session required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repository/{repository}/build/{build_uuid}/status": {
      "get": {
        "tags": [
          "Builds"
        ],
        "summary": "Return the status for the builds specified by the build UUID",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The full path of the repository (e.g., namespace/name)"
          },
          {
            "name": "build_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The UUID of the build"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful invocation"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Session required"
          },
          "403": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/v1/repository/{repository}/build/{build_uuid}/logs": {
      "get": {
        "tags": [
          "Builds"
        ],
        "summary": "Return the build logs for the specified build UUID",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "build_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful invocation"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Session required"
          },
          "403": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/v1/repository/{repository}/build/{build_uuid}": {
      "get": {
        "tags": [
          "Builds"
        ],
        "summary": "Returns information about a build",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "build_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful invocation"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Session required"
          },
          "403": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Builds"
        ],
        "summary": "Cancel a repository build",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "build_uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Session required"
          },
          "403": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/v1/repository/{repository}/build/": {
      "post": {
        "tags": [
          "Builds"
        ],
        "summary": "Request a repository build and push",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "file_id": {
                    "type": "string"
                  },
                  "archive_url": {
                    "type": "string"
                  },
                  "subdirectory": {
                    "type": "string"
                  },
                  "dockerfile_path": {
                    "type": "string"
                  },
                  "context": {
                    "type": "string"
                  },
                  "pull_robot": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful creation"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Session required"
          },
          "403": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "get": {
        "tags": [
          "Builds"
        ],
        "summary": "Get the list of repository builds",
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "since",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Returns all builds since the given Unix timestamp"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "The maximum number of builds to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful invocation"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Session required"
          },
          "403": {
            "description": "Unauthorized access"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/v1/discovery": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "List all available API endpoints",
        "description": "Returns a list of all API endpoints available in the Swagger API format.",
        "operationId": "getDiscovery",
        "parameters": [
          {
            "name": "internal",
            "in": "query",
            "description": "Whether to include internal APIs.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful invocation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Session required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/error/{error_type}": {
      "get": {
        "tags": [
          "Error"
        ],
        "summary": "Get a detailed description of the error",
        "description": "Retrieves a detailed description of the specified error type.",
        "operationId": "getErrorDescription",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "error_type",
            "in": "path",
            "description": "The error code identifying the type of error.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful invocation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiErrorDescription"
                },
                "example": {
                  "error": "404",
                  "message": "The requested resource was not found."
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "status": 400,
                  "detail": "Invalid request format."
                }
              }
            }
          },
          "401": {
            "description": "Session required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "status": 401,
                  "detail": "Authentication token is missing or invalid."
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "status": 403,
                  "detail": "You do not have permission to access this resource."
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "status": 404,
                  "detail": "Error type not found."
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/messages": {
      "post": {
        "tags": [
          "Global messages"
        ],
        "summary": "Create a global message",
        "description": "Creates a new global message with a specified content type and severity level.",
        "operationId": "createGlobalMessage",
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          },
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "object",
                    "properties": {
                      "content": {
                        "type": "string",
                        "description": "The message text."
                      },
                      "media_type": {
                        "type": "string",
                        "enum": [
                          "text/plain",
                          "text/html",
                          "application/json"
                        ],
                        "description": "The media type of the message."
                      },
                      "severity": {
                        "type": "string",
                        "enum": [
                          "info",
                          "warning",
                          "error"
                        ],
                        "description": "The severity level of the message."
                      }
                    },
                    "required": [
                      "content",
                      "media_type",
                      "severity"
                    ]
                  }
                }
              },
              "example": {
                "message": {
                  "content": "Hi",
                  "media_type": "text/plain",
                  "severity": "info"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful creation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "status": 400,
                  "detail": "Invalid message format."
                }
              }
            }
          },
          "401": {
            "description": "Session required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "status": 401,
                  "detail": "Authentication required."
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "status": 403,
                  "detail": "You do not have permission to create messages."
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                },
                "example": {
                  "status": 404,
                  "detail": "Endpoint not found."
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Global messages"
        ],
        "summary": "Get global messages",
        "description": "Returns all global messages visible to super users.",
        "operationId": "getGlobalMessages",
        "security": [
          {
            "oauth2_implicit": [
              "super:user"
            ]
          },
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful invocation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "description": "A list of global messages.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Unique identifier of the message."
                          },
                          "content": {
                            "type": "string",
                            "description": "The message content."
                          },
                          "severity": {
                            "type": "string",
                            "enum": [
                              "info",
                              "warning",
                              "error"
                            ],
                            "description": "The severity level of the message."
                          },
                          "media_type": {
                            "type": "string",
                            "description": "The media type of the message (e.g., text/plain)."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Session required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/message/{uuid}": {
      "delete": {
        "tags": [
          "Global messages"
        ],
        "summary": "Delete a message",
        "description": "Deletes a global message by its UUID.",
        "operationId": "deleteGlobalMessage",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the message to delete.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Session required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/aggregatelogs": {
      "get": {
        "summary": "Returns the aggregated logs for the current user.",
        "description": "Retrieves aggregated logs for the specified user within a given date range.",
        "operationId": "getAggregateUserLogs",
        "tags": [
          "Logs"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "performer",
            "in": "query",
            "description": "Username for which to filter logs.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "starttime",
            "in": "query",
            "description": "Earliest time for logs. Format: YYYY-MM-DD in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endtime",
            "in": "query",
            "description": "Latest time for logs. Format: YYYY-MM-DD in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful invocation"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Session required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/exportlogs": {
      "post": {
        "summary": "Exports aggregated logs for the current user.",
        "description": "Initiates an export of user logs for a given date range and sends the exported logs via a callback URL or email.\n",
        "operationId": "exportUserLogs",
        "tags": [
          "Logs"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "starttime",
            "in": "query",
            "description": "Earliest time for logs. Format: YYYY-MM-DD in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endtime",
            "in": "query",
            "description": "Latest time for logs. Format: YYYY-MM-DD in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "requestBody": {
          "description": "Configuration for an export logs operation (empty JSON object required for request).",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "callback_url": {
                    "type": "string",
                    "description": "The callback URL to invoke with a link to the exported logs."
                  },
                  "callback_email": {
                    "type": "string",
                    "description": "The e-mail address at which to e-mail a link to the exported logs."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful creation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "export_id": {
                      "type": "string",
                      "description": "The ID of the exported log file.",
                      "example": "19689987-b37c-4319-a18b-86b92407af74"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Session required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/logs": {
      "get": {
        "summary": "List the logs for the current user.",
        "description": "Retrieves a list of logs for the current user with optional filters for performer, start time, end time, and pagination.\n",
        "operationId": "listUserLogs",
        "tags": [
          "Logs"
        ],
        "security": [
          {
            "oauth2_implicit": [
              "user:admin"
            ]
          },
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "next_page",
            "in": "query",
            "description": "The page token for the next page of logs.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "performer",
            "in": "query",
            "description": "Username for which to filter logs.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endtime",
            "in": "query",
            "description": "Latest time for logs. Format: MM/DD/YYYY in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "starttime",
            "in": "query",
            "description": "Earliest time for logs. Format: MM/DD/YYYY in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful invocation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "logs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "log_id": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "logs": [
                      {
                        "log_id": "12345",
                        "message": "User performed an action.",
                        "timestamp": "2024-03-25T12:00:00Z"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Session required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/organization/{orgname}/aggregatelogs": {
      "get": {
        "summary": "Gets the aggregated logs for the specified organization.",
        "description": "Retrieves the aggregated logs for a specified organization with optional filters for performer, start time, and end time.\n",
        "operationId": "getAggregateOrgLogs",
        "tags": [
          "Logs"
        ],
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          },
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "orgname",
            "in": "path",
            "description": "The name of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "performer",
            "in": "query",
            "description": "Username for which to filter logs.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endtime",
            "in": "query",
            "description": "Latest time for logs. Format: MM-DD-YYYY in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "starttime",
            "in": "query",
            "description": "Earliest time for logs. Format: MM-DD-YYYY in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful invocation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "logs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "log_id": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "logs": [
                      {
                        "log_id": "98765",
                        "message": "Organization-level action performed.",
                        "timestamp": "2024-03-25T12:00:00Z"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Session required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/organization/{orgname}/exportlogs": {
      "post": {
        "summary": "Exports the logs for the specified organization.",
        "description": "Exports the logs for a specified organization within a given time range.\n",
        "operationId": "exportOrgLogs",
        "tags": [
          "Logs"
        ],
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          },
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "orgname",
            "in": "path",
            "description": "The name of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "starttime",
            "in": "query",
            "description": "Earliest time for logs. Format: MM/DD/YYYY in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endtime",
            "in": "query",
            "description": "Latest time for logs. Format: MM/DD/YYYY in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "requestBody": {
          "description": "Optional payload (empty JSON object required for request).",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Export request received successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "export_id": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "export_id": "d21f74c6-7e6c-4d2a-bc34-8c926789ab56"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Session required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/organization/{orgname}/logs": {
      "get": {
        "summary": "List logs for the specified organization.",
        "description": "Retrieves the logs for a specified organization within a given time range.\n",
        "operationId": "listOrgLogs",
        "tags": [
          "Logs"
        ],
        "security": [
          {
            "oauth2_implicit": [
              "org:admin"
            ]
          },
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "orgname",
            "in": "path",
            "description": "The name of the organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "next_page",
            "in": "query",
            "description": "The page token for the next page.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "performer",
            "in": "query",
            "description": "Username for which to filter logs.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "starttime",
            "in": "query",
            "description": "Earliest time for logs. Format: MM/DD/YYYY in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endtime",
            "in": "query",
            "description": "Latest time for logs. Format: MM/DD/YYYY in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful invocation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "log_id": {
                        "type": "string"
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "performer": {
                        "type": "string"
                      },
                      "action": {
                        "type": "string"
                      }
                    }
                  },
                  "example": [
                    {
                      "log_id": "1a2b3c4d",
                      "timestamp": "2025-03-25T10:15:30Z",
                      "performer": "johndoe",
                      "action": "repo.created"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Session required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repository/{repository}/aggregatelogs": {
      "get": {
        "summary": "Get aggregated logs for a repository",
        "description": "Returns the aggregated logs for the specified repository within a given time range.\n",
        "operationId": "getAggregateRepoLogs",
        "tags": [
          "Logs"
        ],
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          },
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The full path of the repository (e.g., namespace/name).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "starttime",
            "in": "query",
            "description": "Earliest time for logs. Format: MM-DD-YYYY in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endtime",
            "in": "query",
            "description": "Latest time for logs. Format: MM-DD-YYYY in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful invocation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "repository": {
                      "type": "string"
                    },
                    "logs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "log_id": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "performer": {
                            "type": "string"
                          },
                          "action": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "repository": "namespace/myrepo",
                    "logs": [
                      {
                        "log_id": "1a2b3c4d",
                        "timestamp": "2025-03-25T10:15:30Z",
                        "performer": "johndoe",
                        "action": "tag.deleted"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Session required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repository/{repository}/exportlogs": {
      "post": {
        "summary": "Export repository logs",
        "description": "Queues an export of the logs for the specified repository. The export can be delivered via a callback URL or an email notification.\n",
        "operationId": "exportRepoLogs",
        "tags": [
          "Logs"
        ],
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          },
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The full path of the repository (e.g., namespace/name).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "starttime",
            "in": "query",
            "description": "Earliest time for logs. Format: MM/DD/YYYY in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endtime",
            "in": "query",
            "description": "Latest time for logs. Format: MM/DD/YYYY in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "requestBody": {
          "description": "Configuration for an export logs operation (empty JSON object required for request).",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "callback_url": {
                    "type": "string",
                    "format": "uri",
                    "description": "The callback URL to invoke with a link to the exported logs."
                  },
                  "callback_email": {
                    "type": "string",
                    "format": "email",
                    "description": "The email address at which to send a link to the exported logs."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful creation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "export_id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "queued",
                        "processing",
                        "completed"
                      ]
                    }
                  },
                  "example": {
                    "export_id": "12345-abcdef",
                    "status": "queued"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Session required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repository/{repository}/logs": {
      "get": {
        "summary": "List repository logs",
        "description": "Retrieves a list of logs for the specified repository. Supports pagination and filtering by time range.\n",
        "operationId": "listRepoLogs",
        "tags": [
          "Logs"
        ],
        "security": [
          {
            "oauth2_implicit": [
              "repo:admin"
            ]
          },
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "repository",
            "in": "path",
            "description": "The full path of the repository (e.g., namespace/name).",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "starttime",
            "in": "query",
            "description": "Earliest time for logs. Format: MM/DD/YYYY in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endtime",
            "in": "query",
            "description": "Latest time for logs. Format: MM/DD/YYYY in UTC.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "next_page",
            "in": "query",
            "description": "The page token for retrieving the next set of logs.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful invocation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "logs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "timestamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Timestamp of the log entry."
                          },
                          "action": {
                            "type": "string",
                            "description": "Action performed."
                          },
                          "performer": {
                            "type": "string",
                            "description": "User who performed the action."
                          },
                          "details": {
                            "type": "object",
                            "description": "Additional details about the log entry."
                          }
                        }
                      }
                    },
                    "next_page": {
                      "type": "string",
                      "description": "Token for the next page of results, if available."
                    }
                  },
                  "example": {
                    "logs": [
                      {
                        "timestamp": "2024-03-25T12:34:56Z",
                        "action": "push",
                        "performer": "user123",
                        "details": {
                          "tag": "latest"
                        }
                      }
                    ],
                    "next_page": "token123"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Session required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "ApiError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "HTTP status code of the error."
          },
          "detail": {
            "type": "string",
            "description": "A short message describing the error."
          }
        }
      },
      "ApiErrorDescription": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "The error code."
          },
          "message": {
            "type": "string",
            "description": "A detailed description of the error."
          }
        }
      }
    }
  }
}
name: Cherry Pick PR

on:
  issue_comment:
    types: [created]

jobs:
  cherry_pick:
    if: ${{ startsWith(github.event.comment.body, '/cherry-pick') }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Extract target branch from comment
        id: extract_branch
        run: echo "branch=$(echo '${{ github.event.comment.body }}' | cut -d' ' -f2 | tr -d '?')" >> $GITHUB_ENV

      - name: Fetch the target branch
        run: |
          echo "Target branch: ${{ env.branch }}"
          git fetch origin ${{ env.branch }}

      - name: Check out the target branch
        run: git checkout ${{ env.branch }}

      - name: Cherry-pick the commit
        run: |
          git cherry-pick ${{ github.event.issue.pull_request.merge_commit_sha }}
        continue-on-error: true

      - name: Push changes
        if: ${{ success() }}
        run: |
          git push origin HEAD:${{ env.branch }}
        env:
          GH_PAT: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a Pull Request for Conflicts
        if: ${{ failure() }}
        run: |
          git cherry-pick --abort
          git checkout -b cherry-pick-${{ github.sha }}-${{ env.branch }}
          git push origin cherry-pick-${{ github.sha }}-${{ env.branch }}
          gh pr create --title "[Cherry-pick] Resolve conflicts for PR #${{ github.event.issue.number }}" --body "This pull request resolves merge conflicts between the base branch and cherry-picked commits."

      - name: Comment on PR with Result
        run: |
          if [ ${{ success() }} ]; then
            gh pr comment ${{ github.event.issue.number }} --body "Cherry-pick to `${{ env.branch }}` was successful."
          else
            gh pr comment ${{ github.event.issue.number }} --body "Cherry-pick to `${{ env.branch }}` encountered conflicts. A new pull request has been created to resolve them."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

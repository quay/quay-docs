---
- hosts: lab
  # Note: You will likely want/need to setup https://docs.docker.com/registry/insecure/ on any clients working with this Quay Install. 

  vars_prompt:
   - name: "rhsm_user"
     prompt: "RHSM User"
     private: no
   - name: "rhsm_password"
     prompt: "RHSM Password"
   - name: "db"
     prompt: "DB to use (MySQL or PostgreSQL)"
     default: "MySQL"  
     private: no

  remote_user: cloud-user
  become: True

  tasks: 

  # TODO: Make sure system is not already registered. 
  - name: Register and Auto Subscribe
    redhat_subscription:
      state: present
      username: "{{ rhsm_user }}"
      password: "{{ rhsm_password }}"
      #autosubscribe: true
      pool: "{{ sku_search_regex | default('^Employee SKU$') }}"
    register: sub

  # Requires Ansible 2.5
  - name: Disable all RHSM repositories
    rhsm_repository:
      name: '*'
      state: disabled
 
  # Requires Ansible 2.5
  - name: Enable a RHSM repository
    rhsm_repository:
      name: "{{ item }}"
    with_items: 
    - rhel-7-server-rpms
    - rhel-7-server-extras-rpms
    - rhel-7-server-rhceph-3-mon-rpms
    - rhel-7-server-rhceph-3-osd-rpms
    - rhel-7-server-rhceph-3-tools-rpms

  - name: Install Packages
    yum:
      name: "{{ item }}" 
      state: latest
    with_items: 
    - docker
    - docker-python   # Needed for Ansible to run on docker command on the host.
    - ceph-ansible
    - haproxy

  # Read device information (always use unit when probing)
  - parted: 
      device: /dev/vdb 
      unit: MiB
    register: vdb_info

  # Remove all partitions from disk
  - parted:
      device: /dev/vdb
      number: "{{ item.num }}"
      state: absent
    with_items:
     - "{{ vdb_info.partitions }}"

  - name: Set Device for Docker Storage 
    ini_file:
      path: /etc/sysconfig/docker-storage-setup
      section: null
      option: DEVS
      value: "/dev/vdb"
      no_extra_spaces: yes

  - name: Set Volume Group for Docker Storage
    ini_file: 
       path: /etc/sysconfig/docker-storage-setup
       section: null
       option: VG
       value: docker-vg
       no_extra_spaces: yes

  - name: Configure Docker Storage
    command: /usr/bin/docker-storage-setup

  - name: Enable docker
    service:
      name: docker
      enabled: yes  
      state: started

  - name: Create Configuraiton for LoadBalancer (HAProxy)
    template: 
      src: haproxy_cfg.j2
      dest: /etc/haproxy/haproxy.cfg
    with_items: "{{ groups['lab'] | map('extract', hostvars, ['inventory_hostname']) | list }}"
    run_once: true
    delegate_to: "{{ groups['lab'][0] }}"

  - name: Set haproxy_connect_any for port bindings 
    seboolean:
      name: haproxy_connect_any
      state: yes
      persistent: yes

  - name: Enable HAProxy Service 
    service:
      name: haproxy
      enabled: yes  
      state: started
    run_once: true
    delegate_to: "{{ groups['lab'][0] }}"

  - name: Generate Random Root DB Password
    set_fact:
      root_db_password: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters,digits,hexdigits') }}"
    when: mysql_root_password is undefined and postgresql_root_password is undefined
    run_once: true
    delegate_to: "{{ groups['lab'][0] }}"

  - block:
    - name: Generate Random MySQL DB Password
      set_fact:
        mysql_db_password: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters,digits,hexdigits') }}"
      when: mysql_password is undefined

    - name: Create /var/run/mysql
      file:
        path: /var/run/mysql
        state: directory
        mode: 0777
        recurse: yes

    # Requires Ansible 2.5
    - name: Install MySQL
      docker_container:
        name: "MySQL" 
        image: registry.access.redhat.com/rhscl/mysql-57-rhel7
        state: started
        detach: yes
        restart_policy: always
        env: 
          MYSQL_ROOT_PASSWORD: "{{ mysql_root_password | default(root_db_password) }}"
          MYSQL_USER: "{{ mysql_user | default('quay_db_admin') }}"
          MYSQL_PASSWORD: "{{ mysql_password | default(mysql_db_password) }}"
          MYSQL_DATABASE: "{{ mysql_database | default('enterpriseregistrydb') }}"
        volumes: 
        - /var/run/mysql:/var/lib/mysql/data:Z
        ports: 
        - "3306:3306"
    when: '"mysql" in db or "MySQL" in db'
    run_once: true
    delegate_to: "{{ groups['lab'][0] }}"

  - block:
    - name: Generate Random PostgreSQL DB Password
      set_fact:
        postgresql_db_password: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters,digits,hexdigits') }}"
      when: postgresql_password is undefined

    - name: Create /var/run/postgresql
      file:
        path: /var/run/postgresql
        state: directory
        mode: 0777
        recurse: yes

    - name: Install PostgreSQL
      docker_container:
        name: "PostgreSQL" 
        image: registry.access.redhat.com/rhscl/postgresql-96-rhel7
        state: started
        detach: yes
        restart_policy: always
        env: 
          POSTGRESQL_ADMIN_PASSWORD: "{{ postgresql_root_password | default(root_db_password) }}"
          POSTGMYSQL_USER: "{{ postgresql_user | default('quay_db_admin') }}"
          POSTGMYSQL_PASSWORD: "{{ postgresql_password | default(postgresql_db_password) }}"
          POSTGMYSQL_DATABASE: "{{ postgresql_database | default('enterpriseregistrydb') }}"
        volumes: 
        - /var/run/postgresql:/var/lib/psql/data:Z
        ports: 
        - "5432:5432"
    when: '"postgresql" in db or "PostgreSQL" in db'
    run_once: true
    delegate_to: "{{ groups['lab'][0] }}"

  - name: Create /var/run/quay
    file:
      path: /var/run/quay
      state: directory
      mode: 0755

  - name: Create /var/run/quay/config
    file:
      path: /var/run/quay/config
      state: directory
      mode: 0755

  - name: Create /var/run/quay/storage
    file:
      path: /var/run/quay/storage
      state: directory
      mode: 0755

  - name: Install Redis 
    docker_container:
      name: "redis" 
      #image: quay.io/quay/redis
      image: registry.access.redhat.com/rhscl/redis-32-rhel7
      state: started
      detach: yes
      restart_policy: always
      ports: 
      - "6379:6379"

  - name: Ensure root has a .docker directory
    file:
      path: /root/.docker
      state: directory
      mode: 0755

  - name: Copy Over Quay Registry Authentication Configuration
    copy:
      src: config.json
      dest: /root/.docker/config.json

  - name: Install Quay
    docker_container:
      name: "Quay" 
      image: quay.io/coreos/quay:v2.9.1
      state: started
      detach: yes
      privileged: yes
      restart_policy: always
      volumes: 
      - /var/run/quay/config:/conf/stack
      ports: 
      - "8443:443"
      - "8080:80"

  - name: Create Ceph Inventory File
    copy:
      content: |
        [mons]
        {% for h in groups['lab'] %}
        {{ h }} 
        {% endfor %}

        [rgws]
        {% for h in groups['lab'] %}
        {{ h }} 
        {% endfor %}
        
        [mgrs]
        {% for h in groups['lab'] %}
        {{ h }} 
        {% endfor %}

        [osds]
        {% for h in groups['lab'] %}
        {{ h }} devices="['/dev/vdc']"
        {% endfor %}
      dest: /usr/share/ceph-ansible/ceph.inv
    run_once: true
    delegate_to: "{{ groups['lab'][0] }}"

  #TODO: Find a way to run Ansible on a remote host! 
  #- name: Run Ansible Install
  #  #command: 'echo "Runing ansible on $(hostname)"'
  #  command: bash -c 'ansible-playbook -i ~/openshift-ansible/playbooks/byo/config.yml | tee "$(date +%Y-%m-%d)-install.log"'
  #  run_once: true
  #  delegate_to: "{{ groups['lab'][0] }}"

  - name: Generate SelfSigned Certificate
    command: openssl req -x509 -newkey rsa:4096 -keyout /var/run/quay/key.pem -out /var/run/quay/cert.pem -subj /C=US/ST=NC/L=Raleigh/O=RedHat/OU=GSS/CN=quay.quaylab.lan -days 365 -passin pass:notsecure -passout pass:notsecure

  - debug:
      var: root_db_password 
    when: root_db_password is defined

  - debug:
      var: mysql_db_password 
    when: mysql_db_password is defined
    
  - debug:
      var: mysql_db_password 
    when: mysql_db_password is defined

  - debug:
          msg: "Setup Ceph with (from: /usr/shar/ceph-ansible):  export ANSIBLE_HOST_KEY_CHECKING=False; ansible-playbook -u cloud-user -i /usr/share/ceph-ansible/ceph.inv /usr/share/ceph-ansible/site.yml.sample -e ceph_repository_type=cdn -e monitor_interface=eth0 -e public_network=192.168.254.0/24 -e osd_scenario=collocated -e fetch_directory=/tmp -e ceph_origin=repository -e ceph_repository=rhcs -e radosgw_interface=eth0 -e ceph_rgw_civetweb_port=8888 -k"
  
  # Can't do this becuase of a bug: https://github.com/ansible/ansible/pull/37603 
  #- name: Enable Firewall 
  #  firewalld:
  #    port: "{{ item }}" 
  #    permanent: true
  #    state: enabled 
  #  with_items:
  #  - 3306/tcp
